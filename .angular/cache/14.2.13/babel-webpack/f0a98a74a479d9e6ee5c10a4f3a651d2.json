{"ast":null,"code":"import { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest(...args) {\n  const resultSelector = popResultSelector(args);\n  return resultSelector ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector)) : operate((source, subscriber) => {\n    combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n  });\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/operators/combineLatest.js"],"names":["combineLatestInit","operate","argsOrArgArray","mapOneOrManyArgs","pipe","popResultSelector","combineLatest","args","resultSelector","source","subscriber"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6BAAlC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAO,SAASC,aAAT,CAAuB,GAAGC,IAA1B,EAAgC;AACnC,QAAMC,cAAc,GAAGH,iBAAiB,CAACE,IAAD,CAAxC;AACA,SAAOC,cAAc,GACfJ,IAAI,CAACE,aAAa,CAAC,GAAGC,IAAJ,CAAd,EAAyBJ,gBAAgB,CAACK,cAAD,CAAzC,CADW,GAEfP,OAAO,CAAC,CAACQ,MAAD,EAASC,UAAT,KAAwB;AAC9BV,IAAAA,iBAAiB,CAAC,CAACS,MAAD,EAAS,GAAGP,cAAc,CAACK,IAAD,CAA1B,CAAD,CAAjB,CAAqDG,UAArD;AACH,GAFQ,CAFb;AAKH","sourcesContent":["import { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest(...args) {\n    const resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector))\n        : operate((source, subscriber) => {\n            combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n        });\n}\n"]},"metadata":{},"sourceType":"module"}