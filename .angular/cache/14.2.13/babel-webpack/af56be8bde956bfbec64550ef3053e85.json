{"ast":null,"code":"const {\n  isArray\n} = Array;\nconst {\n  getPrototypeOf,\n  prototype: objectProto,\n  keys: getKeys\n} = Object;\nexport function argsArgArrayOrObject(args) {\n  if (args.length === 1) {\n    const first = args[0];\n\n    if (isArray(first)) {\n      return {\n        args: first,\n        keys: null\n      };\n    }\n\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map(key => first[key]),\n        keys\n      };\n    }\n  }\n\n  return {\n    args: args,\n    keys: null\n  };\n}\n\nfunction isPOJO(obj) {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/util/argsArgArrayOrObject.js"],"names":["isArray","Array","getPrototypeOf","prototype","objectProto","keys","getKeys","Object","argsArgArrayOrObject","args","length","first","isPOJO","map","key","obj"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,KAApB;AACA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,SAAS,EAAEC,WAA7B;AAA0CC,EAAAA,IAAI,EAAEC;AAAhD,IAA4DC,MAAlE;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACvC,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACnB,UAAMC,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAlB;;AACA,QAAIT,OAAO,CAACW,KAAD,CAAX,EAAoB;AAChB,aAAO;AAAEF,QAAAA,IAAI,EAAEE,KAAR;AAAeN,QAAAA,IAAI,EAAE;AAArB,OAAP;AACH;;AACD,QAAIO,MAAM,CAACD,KAAD,CAAV,EAAmB;AACf,YAAMN,IAAI,GAAGC,OAAO,CAACK,KAAD,CAApB;AACA,aAAO;AACHF,QAAAA,IAAI,EAAEJ,IAAI,CAACQ,GAAL,CAAUC,GAAD,IAASH,KAAK,CAACG,GAAD,CAAvB,CADH;AAEHT,QAAAA;AAFG,OAAP;AAIH;AACJ;;AACD,SAAO;AAAEI,IAAAA,IAAI,EAAEA,IAAR;AAAcJ,IAAAA,IAAI,EAAE;AAApB,GAAP;AACH;;AACD,SAASO,MAAT,CAAgBG,GAAhB,EAAqB;AACjB,SAAOA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAtB,IAAkCb,cAAc,CAACa,GAAD,CAAd,KAAwBX,WAAjE;AACH","sourcesContent":["const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\nexport function argsArgArrayOrObject(args) {\n    if (args.length === 1) {\n        const first = args[0];\n        if (isArray(first)) {\n            return { args: first, keys: null };\n        }\n        if (isPOJO(first)) {\n            const keys = getKeys(first);\n            return {\n                args: keys.map((key) => first[key]),\n                keys,\n            };\n        }\n    }\n    return { args: args, keys: null };\n}\nfunction isPOJO(obj) {\n    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n"]},"metadata":{},"sourceType":"module"}