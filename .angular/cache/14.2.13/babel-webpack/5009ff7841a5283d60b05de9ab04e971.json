{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n  return operate((source, subscriber) => {\n    const windows = [];\n\n    const handleError = err => {\n      while (0 < windows.length) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, openValue => {\n      const window = new Subject();\n      windows.push(window);\n      const closingSubscription = new Subscription();\n\n      const closeWindow = () => {\n        arrRemove(windows, window);\n        window.complete();\n        closingSubscription.unsubscribe();\n      };\n\n      let closingNotifier;\n\n      try {\n        closingNotifier = innerFrom(closingSelector(openValue));\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      subscriber.next(window.asObservable());\n      closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n    }, noop));\n    source.subscribe(createOperatorSubscriber(subscriber, value => {\n      const windowsCopy = windows.slice();\n\n      for (const window of windowsCopy) {\n        window.next(value);\n      }\n    }, () => {\n      while (0 < windows.length) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, handleError, () => {\n      while (0 < windows.length) {\n        windows.shift().unsubscribe();\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/operators/windowToggle.js"],"names":["Subject","Subscription","operate","innerFrom","createOperatorSubscriber","noop","arrRemove","windowToggle","openings","closingSelector","source","subscriber","windows","handleError","err","length","shift","error","subscribe","openValue","window","push","closingSubscription","closeWindow","complete","unsubscribe","closingNotifier","next","asObservable","add","value","windowsCopy","slice"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,eAAhC,EAAiD;AACpD,SAAOP,OAAO,CAAC,CAACQ,MAAD,EAASC,UAAT,KAAwB;AACnC,UAAMC,OAAO,GAAG,EAAhB;;AACA,UAAMC,WAAW,GAAIC,GAAD,IAAS;AACzB,aAAO,IAAIF,OAAO,CAACG,MAAnB,EAA2B;AACvBH,QAAAA,OAAO,CAACI,KAAR,GAAgBC,KAAhB,CAAsBH,GAAtB;AACH;;AACDH,MAAAA,UAAU,CAACM,KAAX,CAAiBH,GAAjB;AACH,KALD;;AAMAX,IAAAA,SAAS,CAACK,QAAD,CAAT,CAAoBU,SAApB,CAA8Bd,wBAAwB,CAACO,UAAD,EAAcQ,SAAD,IAAe;AAC9E,YAAMC,MAAM,GAAG,IAAIpB,OAAJ,EAAf;AACAY,MAAAA,OAAO,CAACS,IAAR,CAAaD,MAAb;AACA,YAAME,mBAAmB,GAAG,IAAIrB,YAAJ,EAA5B;;AACA,YAAMsB,WAAW,GAAG,MAAM;AACtBjB,QAAAA,SAAS,CAACM,OAAD,EAAUQ,MAAV,CAAT;AACAA,QAAAA,MAAM,CAACI,QAAP;AACAF,QAAAA,mBAAmB,CAACG,WAApB;AACH,OAJD;;AAKA,UAAIC,eAAJ;;AACA,UAAI;AACAA,QAAAA,eAAe,GAAGvB,SAAS,CAACM,eAAe,CAACU,SAAD,CAAhB,CAA3B;AACH,OAFD,CAGA,OAAOL,GAAP,EAAY;AACRD,QAAAA,WAAW,CAACC,GAAD,CAAX;AACA;AACH;;AACDH,MAAAA,UAAU,CAACgB,IAAX,CAAgBP,MAAM,CAACQ,YAAP,EAAhB;AACAN,MAAAA,mBAAmB,CAACO,GAApB,CAAwBH,eAAe,CAACR,SAAhB,CAA0Bd,wBAAwB,CAACO,UAAD,EAAaY,WAAb,EAA0BlB,IAA1B,EAAgCQ,WAAhC,CAAlD,CAAxB;AACH,KAnBqD,EAmBnDR,IAnBmD,CAAtD;AAoBAK,IAAAA,MAAM,CAACQ,SAAP,CAAiBd,wBAAwB,CAACO,UAAD,EAAcmB,KAAD,IAAW;AAC7D,YAAMC,WAAW,GAAGnB,OAAO,CAACoB,KAAR,EAApB;;AACA,WAAK,MAAMZ,MAAX,IAAqBW,WAArB,EAAkC;AAC9BX,QAAAA,MAAM,CAACO,IAAP,CAAYG,KAAZ;AACH;AACJ,KALwC,EAKtC,MAAM;AACL,aAAO,IAAIlB,OAAO,CAACG,MAAnB,EAA2B;AACvBH,QAAAA,OAAO,CAACI,KAAR,GAAgBQ,QAAhB;AACH;;AACDb,MAAAA,UAAU,CAACa,QAAX;AACH,KAVwC,EAUtCX,WAVsC,EAUzB,MAAM;AAClB,aAAO,IAAID,OAAO,CAACG,MAAnB,EAA2B;AACvBH,QAAAA,OAAO,CAACI,KAAR,GAAgBS,WAAhB;AACH;AACJ,KAdwC,CAAzC;AAeH,GA3Ca,CAAd;AA4CH","sourcesContent":["import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n    return operate((source, subscriber) => {\n        const windows = [];\n        const handleError = (err) => {\n            while (0 < windows.length) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        };\n        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, (openValue) => {\n            const window = new Subject();\n            windows.push(window);\n            const closingSubscription = new Subscription();\n            const closeWindow = () => {\n                arrRemove(windows, window);\n                window.complete();\n                closingSubscription.unsubscribe();\n            };\n            let closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector(openValue));\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            subscriber.next(window.asObservable());\n            closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        }, noop));\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const windowsCopy = windows.slice();\n            for (const window of windowsCopy) {\n                window.next(value);\n            }\n        }, () => {\n            while (0 < windows.length) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, handleError, () => {\n            while (0 < windows.length) {\n                windows.shift().unsubscribe();\n            }\n        }));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}