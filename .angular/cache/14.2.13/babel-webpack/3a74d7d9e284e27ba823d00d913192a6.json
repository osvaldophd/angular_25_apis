{"ast":null,"code":"import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n  constructor(_value) {\n    super();\n    this._value = _value;\n  }\n\n  get value() {\n    return this.getValue();\n  }\n\n  _subscribe(subscriber) {\n    const subscription = super._subscribe(subscriber);\n\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue() {\n    const {\n      hasError,\n      thrownError,\n      _value\n    } = this;\n\n    if (hasError) {\n      throw thrownError;\n    }\n\n    this._throwIfClosed();\n\n    return _value;\n  }\n\n  next(value) {\n    super.next(this._value = value);\n  }\n\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/BehaviorSubject.js"],"names":["Subject","BehaviorSubject","constructor","_value","value","getValue","_subscribe","subscriber","subscription","closed","next","hasError","thrownError","_throwIfClosed"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,OAAO,MAAMC,eAAN,SAA8BD,OAA9B,CAAsC;AACzCE,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB;AACA,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACQ,MAALC,KAAK,GAAG;AACR,WAAO,KAAKC,QAAL,EAAP;AACH;;AACDC,EAAAA,UAAU,CAACC,UAAD,EAAa;AACnB,UAAMC,YAAY,GAAG,MAAMF,UAAN,CAAiBC,UAAjB,CAArB;;AACA,KAACC,YAAY,CAACC,MAAd,IAAwBF,UAAU,CAACG,IAAX,CAAgB,KAAKP,MAArB,CAAxB;AACA,WAAOK,YAAP;AACH;;AACDH,EAAAA,QAAQ,GAAG;AACP,UAAM;AAAEM,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBT,MAAAA;AAAzB,QAAoC,IAA1C;;AACA,QAAIQ,QAAJ,EAAc;AACV,YAAMC,WAAN;AACH;;AACD,SAAKC,cAAL;;AACA,WAAOV,MAAP;AACH;;AACDO,EAAAA,IAAI,CAACN,KAAD,EAAQ;AACR,UAAMM,IAAN,CAAY,KAAKP,MAAL,GAAcC,KAA1B;AACH;;AAvBwC","sourcesContent":["import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}