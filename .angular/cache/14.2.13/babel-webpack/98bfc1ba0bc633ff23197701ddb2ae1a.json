{"ast":null,"code":"import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n  timeoutProvider.setTimeout(() => {\n    const {\n      onUnhandledError\n    } = config;\n\n    if (onUnhandledError) {\n      onUnhandledError(err);\n    } else {\n      throw err;\n    }\n  });\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/util/reportUnhandledError.js"],"names":["config","timeoutProvider","reportUnhandledError","err","setTimeout","onUnhandledError"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAO,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACtCF,EAAAA,eAAe,CAACG,UAAhB,CAA2B,MAAM;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAuBL,MAA7B;;AACA,QAAIK,gBAAJ,EAAsB;AAClBA,MAAAA,gBAAgB,CAACF,GAAD,CAAhB;AACH,KAFD,MAGK;AACD,YAAMA,GAAN;AACH;AACJ,GARD;AASH","sourcesContent":["import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(() => {\n        const { onUnhandledError } = config;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}