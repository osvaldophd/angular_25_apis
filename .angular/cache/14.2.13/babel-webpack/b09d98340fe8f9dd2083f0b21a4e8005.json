{"ast":null,"code":"import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n  constructor(scheduler, work) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n    this.pending = false;\n  }\n\n  schedule(state, delay = 0) {\n    if (this.closed) {\n      return this;\n    }\n\n    this.state = state;\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.pending = true;\n    this.delay = delay;\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  }\n\n  requestAsyncId(scheduler, _id, delay = 0) {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  recycleAsyncId(_scheduler, id, delay = 0) {\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n\n    intervalProvider.clearInterval(id);\n    return undefined;\n  }\n\n  execute(state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n\n    const error = this._execute(state, delay);\n\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  _execute(state, _delay) {\n    let errored = false;\n    let errorValue;\n\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const {\n        id,\n        scheduler\n      } = this;\n      const {\n        actions\n      } = scheduler;\n      this.work = this.state = this.scheduler = null;\n      this.pending = false;\n      arrRemove(actions, this);\n\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null;\n      super.unsubscribe();\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js"],"names":["Action","intervalProvider","arrRemove","AsyncAction","constructor","scheduler","work","pending","schedule","state","delay","closed","id","recycleAsyncId","requestAsyncId","_id","setInterval","flush","bind","_scheduler","clearInterval","undefined","execute","Error","error","_execute","_delay","errored","errorValue","e","unsubscribe","actions"],"mappings":"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","sourcesContent":["import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        intervalProvider.clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}