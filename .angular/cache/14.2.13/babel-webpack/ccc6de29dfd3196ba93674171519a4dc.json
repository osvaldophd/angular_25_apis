{"ast":null,"code":"import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  constructor(schedulerActionCtor = VirtualAction, maxFrames = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n    this.maxFrames = maxFrames;\n    this.frame = 0;\n    this.index = -1;\n  }\n\n  flush() {\n    const {\n      actions,\n      maxFrames\n    } = this;\n    let error;\n    let action;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  }\n\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n  constructor(scheduler, work, index = scheduler.index += 1) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n    this.index = index;\n    this.active = true;\n    this.index = scheduler.index = index;\n  }\n\n  schedule(state, delay = 0) {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n\n      this.active = false;\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n\n  requestAsyncId(scheduler, id, delay = 0) {\n    this.delay = scheduler.frame + delay;\n    const {\n      actions\n    } = scheduler;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  recycleAsyncId(scheduler, id, delay = 0) {\n    return undefined;\n  }\n\n  _execute(state, delay) {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  static sortActions(a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/scheduler/VirtualTimeScheduler.js"],"names":["AsyncAction","Subscription","AsyncScheduler","VirtualTimeScheduler","constructor","schedulerActionCtor","VirtualAction","maxFrames","Infinity","frame","index","flush","actions","error","action","delay","shift","execute","state","unsubscribe","frameTimeFactor","scheduler","work","active","schedule","Number","isFinite","id","add","EMPTY","requestAsyncId","push","sort","sortActions","recycleAsyncId","undefined","_execute","a","b"],"mappings":"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","sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(schedulerActionCtor = VirtualAction, maxFrames = Infinity) {\n        super(schedulerActionCtor, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error;\n        let action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        }\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = (scheduler.index += 1)) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (Number.isFinite(delay)) {\n            if (!this.id) {\n                return super.schedule(state, delay);\n            }\n            this.active = false;\n            const action = new VirtualAction(this.scheduler, this.work);\n            this.add(action);\n            return action.schedule(state, delay);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}