{"ast":null,"code":"import { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustAll() {\n  return operate((source, subscriber) => {\n    let isComplete = false;\n    let innerSub = null;\n    source.subscribe(createOperatorSubscriber(subscriber, inner => {\n      if (!innerSub) {\n        innerSub = innerFrom(inner).subscribe(createOperatorSubscriber(subscriber, undefined, () => {\n          innerSub = null;\n          isComplete && subscriber.complete();\n        }));\n      }\n    }, () => {\n      isComplete = true;\n      !innerSub && subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/operators/exhaustAll.js"],"names":["operate","innerFrom","createOperatorSubscriber","exhaustAll","source","subscriber","isComplete","innerSub","subscribe","inner","undefined","complete"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,OAAO,SAASC,UAAT,GAAsB;AACzB,SAAOH,OAAO,CAAC,CAACI,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,UAAU,GAAG,KAAjB;AACA,QAAIC,QAAQ,GAAG,IAAf;AACAH,IAAAA,MAAM,CAACI,SAAP,CAAiBN,wBAAwB,CAACG,UAAD,EAAcI,KAAD,IAAW;AAC7D,UAAI,CAACF,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAGN,SAAS,CAACQ,KAAD,CAAT,CAAiBD,SAAjB,CAA2BN,wBAAwB,CAACG,UAAD,EAAaK,SAAb,EAAwB,MAAM;AACxFH,UAAAA,QAAQ,GAAG,IAAX;AACAD,UAAAA,UAAU,IAAID,UAAU,CAACM,QAAX,EAAd;AACH,SAH6D,CAAnD,CAAX;AAIH;AACJ,KAPwC,EAOtC,MAAM;AACLL,MAAAA,UAAU,GAAG,IAAb;AACA,OAACC,QAAD,IAAaF,UAAU,CAACM,QAAX,EAAb;AACH,KAVwC,CAAzC;AAWH,GAda,CAAd;AAeH","sourcesContent":["import { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustAll() {\n    return operate((source, subscriber) => {\n        let isComplete = false;\n        let innerSub = null;\n        source.subscribe(createOperatorSubscriber(subscriber, (inner) => {\n            if (!innerSub) {\n                innerSub = innerFrom(inner).subscribe(createOperatorSubscriber(subscriber, undefined, () => {\n                    innerSub = null;\n                    isComplete && subscriber.complete();\n                }));\n            }\n        }, () => {\n            isComplete = true;\n            !innerSub && subscriber.complete();\n        }));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}