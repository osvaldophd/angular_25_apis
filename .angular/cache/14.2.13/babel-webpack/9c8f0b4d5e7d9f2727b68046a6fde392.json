{"ast":null,"code":"import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n  constructor(initialTeardown) {\n    this.initialTeardown = initialTeardown;\n    this.closed = false;\n    this._parentage = null;\n    this._finalizers = null;\n  }\n\n  unsubscribe() {\n    let errors;\n\n    if (!this.closed) {\n      this.closed = true;\n      const {\n        _parentage\n      } = this;\n\n      if (_parentage) {\n        this._parentage = null;\n\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const {\n        initialTeardown: initialFinalizer\n      } = this;\n\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const {\n        _finalizers\n      } = this;\n\n      if (_finalizers) {\n        this._finalizers = null;\n\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors !== null && errors !== void 0 ? errors : [];\n\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  add(teardown) {\n    var _a;\n\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n\n          teardown._addParent(this);\n        }\n\n        (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n      }\n    }\n  }\n\n  _hasParent(parent) {\n    const {\n      _parentage\n    } = this;\n    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);\n  }\n\n  _addParent(parent) {\n    const {\n      _parentage\n    } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  _removeParent(parent) {\n    const {\n      _parentage\n    } = this;\n\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  remove(teardown) {\n    const {\n      _finalizers\n    } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n\n}\n\nSubscription.EMPTY = (() => {\n  const empty = new Subscription();\n  empty.closed = true;\n  return empty;\n})();\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);\n}\n\nfunction execFinalizer(finalizer) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/Subscription.js"],"names":["isFunction","UnsubscriptionError","arrRemove","Subscription","constructor","initialTeardown","closed","_parentage","_finalizers","unsubscribe","errors","Array","isArray","parent","remove","initialFinalizer","e","finalizer","execFinalizer","err","push","add","teardown","_a","_hasParent","_addParent","includes","_removeParent","EMPTY","empty","EMPTY_SUBSCRIPTION","isSubscription","value"],"mappings":"AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,eAAD,EAAkB;AACzB,SAAKA,eAAL,GAAuBA,eAAvB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,QAAIC,MAAJ;;AACA,QAAI,CAAC,KAAKJ,MAAV,EAAkB;AACd,WAAKA,MAAL,GAAc,IAAd;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAiB,IAAvB;;AACA,UAAIA,UAAJ,EAAgB;AACZ,aAAKA,UAAL,GAAkB,IAAlB;;AACA,YAAII,KAAK,CAACC,OAAN,CAAcL,UAAd,CAAJ,EAA+B;AAC3B,eAAK,MAAMM,MAAX,IAAqBN,UAArB,EAAiC;AAC7BM,YAAAA,MAAM,CAACC,MAAP,CAAc,IAAd;AACH;AACJ,SAJD,MAKK;AACDP,UAAAA,UAAU,CAACO,MAAX,CAAkB,IAAlB;AACH;AACJ;;AACD,YAAM;AAAET,QAAAA,eAAe,EAAEU;AAAnB,UAAwC,IAA9C;;AACA,UAAIf,UAAU,CAACe,gBAAD,CAAd,EAAkC;AAC9B,YAAI;AACAA,UAAAA,gBAAgB;AACnB,SAFD,CAGA,OAAOC,CAAP,EAAU;AACNN,UAAAA,MAAM,GAAGM,CAAC,YAAYf,mBAAb,GAAmCe,CAAC,CAACN,MAArC,GAA8C,CAACM,CAAD,CAAvD;AACH;AACJ;;AACD,YAAM;AAAER,QAAAA;AAAF,UAAkB,IAAxB;;AACA,UAAIA,WAAJ,EAAiB;AACb,aAAKA,WAAL,GAAmB,IAAnB;;AACA,aAAK,MAAMS,SAAX,IAAwBT,WAAxB,EAAqC;AACjC,cAAI;AACAU,YAAAA,aAAa,CAACD,SAAD,CAAb;AACH,WAFD,CAGA,OAAOE,GAAP,EAAY;AACRT,YAAAA,MAAM,GAAGA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,EAAzD;;AACA,gBAAIS,GAAG,YAAYlB,mBAAnB,EAAwC;AACpCS,cAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,EAAY,GAAGS,GAAG,CAACT,MAAnB,CAAT;AACH,aAFD,MAGK;AACDA,cAAAA,MAAM,CAACU,IAAP,CAAYD,GAAZ;AACH;AACJ;AACJ;AACJ;;AACD,UAAIT,MAAJ,EAAY;AACR,cAAM,IAAIT,mBAAJ,CAAwBS,MAAxB,CAAN;AACH;AACJ;AACJ;;AACDW,EAAAA,GAAG,CAACC,QAAD,EAAW;AACV,QAAIC,EAAJ;;AACA,QAAID,QAAQ,IAAIA,QAAQ,KAAK,IAA7B,EAAmC;AAC/B,UAAI,KAAKhB,MAAT,EAAiB;AACbY,QAAAA,aAAa,CAACI,QAAD,CAAb;AACH,OAFD,MAGK;AACD,YAAIA,QAAQ,YAAYnB,YAAxB,EAAsC;AAClC,cAAImB,QAAQ,CAAChB,MAAT,IAAmBgB,QAAQ,CAACE,UAAT,CAAoB,IAApB,CAAvB,EAAkD;AAC9C;AACH;;AACDF,UAAAA,QAAQ,CAACG,UAAT,CAAoB,IAApB;AACH;;AACD,SAAC,KAAKjB,WAAL,GAAmB,CAACe,EAAE,GAAG,KAAKf,WAAX,MAA4B,IAA5B,IAAoCe,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyD,EAA7E,EAAiFH,IAAjF,CAAsFE,QAAtF;AACH;AACJ;AACJ;;AACDE,EAAAA,UAAU,CAACX,MAAD,EAAS;AACf,UAAM;AAAEN,MAAAA;AAAF,QAAiB,IAAvB;AACA,WAAOA,UAAU,KAAKM,MAAf,IAA0BF,KAAK,CAACC,OAAN,CAAcL,UAAd,KAA6BA,UAAU,CAACmB,QAAX,CAAoBb,MAApB,CAA9D;AACH;;AACDY,EAAAA,UAAU,CAACZ,MAAD,EAAS;AACf,UAAM;AAAEN,MAAAA;AAAF,QAAiB,IAAvB;AACA,SAAKA,UAAL,GAAkBI,KAAK,CAACC,OAAN,CAAcL,UAAd,KAA6BA,UAAU,CAACa,IAAX,CAAgBP,MAAhB,GAAyBN,UAAtD,IAAoEA,UAAU,GAAG,CAACA,UAAD,EAAaM,MAAb,CAAH,GAA0BA,MAA1H;AACH;;AACDc,EAAAA,aAAa,CAACd,MAAD,EAAS;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAAiB,IAAvB;;AACA,QAAIA,UAAU,KAAKM,MAAnB,EAA2B;AACvB,WAAKN,UAAL,GAAkB,IAAlB;AACH,KAFD,MAGK,IAAII,KAAK,CAACC,OAAN,CAAcL,UAAd,CAAJ,EAA+B;AAChCL,MAAAA,SAAS,CAACK,UAAD,EAAaM,MAAb,CAAT;AACH;AACJ;;AACDC,EAAAA,MAAM,CAACQ,QAAD,EAAW;AACb,UAAM;AAAEd,MAAAA;AAAF,QAAkB,IAAxB;AACAA,IAAAA,WAAW,IAAIN,SAAS,CAACM,WAAD,EAAcc,QAAd,CAAxB;;AACA,QAAIA,QAAQ,YAAYnB,YAAxB,EAAsC;AAClCmB,MAAAA,QAAQ,CAACK,aAAT,CAAuB,IAAvB;AACH;AACJ;;AA/FqB;;AAiG1BxB,YAAY,CAACyB,KAAb,GAAqB,CAAC,MAAM;AACxB,QAAMC,KAAK,GAAG,IAAI1B,YAAJ,EAAd;AACA0B,EAAAA,KAAK,CAACvB,MAAN,GAAe,IAAf;AACA,SAAOuB,KAAP;AACH,CAJoB,GAArB;;AAKA,OAAO,MAAMC,kBAAkB,GAAG3B,YAAY,CAACyB,KAAxC;AACP,OAAO,SAASG,cAAT,CAAwBC,KAAxB,EAA+B;AAClC,SAAQA,KAAK,YAAY7B,YAAjB,IACH6B,KAAK,IAAI,YAAYA,KAArB,IAA8BhC,UAAU,CAACgC,KAAK,CAAClB,MAAP,CAAxC,IAA0Dd,UAAU,CAACgC,KAAK,CAACX,GAAP,CAApE,IAAmFrB,UAAU,CAACgC,KAAK,CAACvB,WAAP,CADlG;AAEH;;AACD,SAASS,aAAT,CAAuBD,SAAvB,EAAkC;AAC9B,MAAIjB,UAAU,CAACiB,SAAD,CAAd,EAA2B;AACvBA,IAAAA,SAAS;AACZ,GAFD,MAGK;AACDA,IAAAA,SAAS,CAACR,WAAV;AACH;AACJ","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown: initialFinalizer } = this;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _finalizers } = this;\n            if (_finalizers) {\n                this._finalizers = null;\n                for (const finalizer of _finalizers) {\n                    try {\n                        execFinalizer(finalizer);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _finalizers } = this;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}