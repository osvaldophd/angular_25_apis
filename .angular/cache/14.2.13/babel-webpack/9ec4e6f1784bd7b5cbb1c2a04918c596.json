{"ast":null,"code":"import { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function windowWhen(closingSelector) {\n  return operate((source, subscriber) => {\n    let window;\n    let closingSubscriber;\n\n    const handleError = err => {\n      window.error(err);\n      subscriber.error(err);\n    };\n\n    const openWindow = () => {\n      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n      window === null || window === void 0 ? void 0 : window.complete();\n      window = new Subject();\n      subscriber.next(window.asObservable());\n      let closingNotifier;\n\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      closingNotifier.subscribe(closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError));\n    };\n\n    openWindow();\n    source.subscribe(createOperatorSubscriber(subscriber, value => window.next(value), () => {\n      window.complete();\n      subscriber.complete();\n    }, handleError, () => {\n      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n      window = null;\n    }));\n  });\n}","map":{"version":3,"sources":["/Volumes/arquivo-osvaldo/WWW/treinamento/angular_25_apis/node_modules/rxjs/dist/esm/internal/operators/windowWhen.js"],"names":["Subject","operate","createOperatorSubscriber","innerFrom","windowWhen","closingSelector","source","subscriber","window","closingSubscriber","handleError","err","error","openWindow","unsubscribe","complete","next","asObservable","closingNotifier","subscribe","value"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,SAASC,UAAT,CAAoBC,eAApB,EAAqC;AACxC,SAAOJ,OAAO,CAAC,CAACK,MAAD,EAASC,UAAT,KAAwB;AACnC,QAAIC,MAAJ;AACA,QAAIC,iBAAJ;;AACA,UAAMC,WAAW,GAAIC,GAAD,IAAS;AACzBH,MAAAA,MAAM,CAACI,KAAP,CAAaD,GAAb;AACAJ,MAAAA,UAAU,CAACK,KAAX,CAAiBD,GAAjB;AACH,KAHD;;AAIA,UAAME,UAAU,GAAG,MAAM;AACrBJ,MAAAA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACK,WAAlB,EAAtE;AACAN,MAAAA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO,QAAP,EAAhD;AACAP,MAAAA,MAAM,GAAG,IAAIR,OAAJ,EAAT;AACAO,MAAAA,UAAU,CAACS,IAAX,CAAgBR,MAAM,CAACS,YAAP,EAAhB;AACA,UAAIC,eAAJ;;AACA,UAAI;AACAA,QAAAA,eAAe,GAAGf,SAAS,CAACE,eAAe,EAAhB,CAA3B;AACH,OAFD,CAGA,OAAOM,GAAP,EAAY;AACRD,QAAAA,WAAW,CAACC,GAAD,CAAX;AACA;AACH;;AACDO,MAAAA,eAAe,CAACC,SAAhB,CAA2BV,iBAAiB,GAAGP,wBAAwB,CAACK,UAAD,EAAaM,UAAb,EAAyBA,UAAzB,EAAqCH,WAArC,CAAvE;AACH,KAdD;;AAeAG,IAAAA,UAAU;AACVP,IAAAA,MAAM,CAACa,SAAP,CAAiBjB,wBAAwB,CAACK,UAAD,EAAca,KAAD,IAAWZ,MAAM,CAACQ,IAAP,CAAYI,KAAZ,CAAxB,EAA4C,MAAM;AACvFZ,MAAAA,MAAM,CAACO,QAAP;AACAR,MAAAA,UAAU,CAACQ,QAAX;AACH,KAHwC,EAGtCL,WAHsC,EAGzB,MAAM;AAClBD,MAAAA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,CAACK,WAAlB,EAAtE;AACAN,MAAAA,MAAM,GAAG,IAAT;AACH,KANwC,CAAzC;AAOH,GA9Ba,CAAd;AA+BH","sourcesContent":["import { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function windowWhen(closingSelector) {\n    return operate((source, subscriber) => {\n        let window;\n        let closingSubscriber;\n        const handleError = (err) => {\n            window.error(err);\n            subscriber.error(err);\n        };\n        const openWindow = () => {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            window === null || window === void 0 ? void 0 : window.complete();\n            window = new Subject();\n            subscriber.next(window.asObservable());\n            let closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector());\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n        };\n        openWindow();\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => window.next(value), () => {\n            window.complete();\n            subscriber.complete();\n        }, handleError, () => {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            window = null;\n        }));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}